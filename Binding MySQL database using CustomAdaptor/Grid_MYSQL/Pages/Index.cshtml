@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<ejs-grid id="Grid" height="348px" allowSorting="true" allowFiltering="true" allowPaging="true"
          toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel", "Search" })">
    <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Normal"></e-grid-editSettings>
    <e-grid-columns>
        <e-grid-column field="OrderID" headerText="Order ID" width="120" textAlign="Right" isIdentity="true" isPrimaryKey="true"></e-grid-column>
        <e-grid-column field="CustomerID" headerText="Customer ID" validationRules="@(new { required=true })" width="160"></e-grid-column>
        <e-grid-column field="EmployeeID" headerText="Employee ID" validationRules="@(new { required=true })" width="160" textAlign="Right"></e-grid-column>
        <e-grid-column field="Freight" headerText="Freight" validationRules="@(new { required=true })" format="C2" width="160" textAlign="Right"></e-grid-column>
        <e-grid-column field="ShipCity" headerText="Ship City" validationRules="@(new { required=true })" width="150"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

<script>
    class CustomAdaptor extends ej.data.UrlAdaptor {
        processResponse(data, ds, query, xhr, request, changes) {
            var original = super.processResponse(data, ds, query, xhr, request, changes);
            return original;
        }

        insert(dm, data) {
            return {
                    url: dm.dataSource.insertUrl || dm.dataSource.url,
                    data: JSON.stringify({
                        __RequestVerificationToken: "Syncfusion",
                        value: data,
                        action: 'insert'
                    }),
                    type: 'POST'
            };
        }

        update(dm, keyField, value) {
            return {
            url: dm.dataSource.updateUrl || dm.dataSource.url,
            data: JSON.stringify({
            __RequestVerificationToken: "Syncfusion",
            value: value,
            action: 'update',
            }),
            type: 'POST',
            };
        }

    remove(dm, keyField, value) {
      return {
        url: dm.dataSource.removeUrl || dm.dataSource.url,
        data: JSON.stringify({
          __RequestVerificationToken: "Syncfusion",
          key: value,
          keyColumn: keyField,
          action: 'remove',
        }),
        type: 'POST',
      };
    }
    }
    document.addEventListener("DOMContentLoaded", function () {
        let grid = document.getElementById("Grid").ej2_instances[0];
        if (grid) {
            let dataManager = new ejs.data.DataManager({
                url: "https://localhost:7172/api/Grid", // Corrected URL
                  insertUrl: 'https://localhost:7172/api/Grid/Insert',
                   updateUrl: 'https://localhost:7172/api/Grid/Update',
                  removeUrl: 'https://localhost:7172/api/Grid/Remove',
      // Enable batch URL when batch editing is enabled.
      //batchUrl: 'https://localhost:7172/api/Grid/BatchUpdate',
                adaptor: new CustomAdaptor(),
            });
            grid.dataSource = dataManager;
        }
    });
</script>

